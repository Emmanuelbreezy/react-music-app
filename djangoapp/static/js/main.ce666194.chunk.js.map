{"version":3,"sources":["serviceWorker.js","withRoot.js","components/Track/SearchTracks.js","components/Shared/AudioPlayer.js","components/Track/LikeTrack.js","components/Track/DeleteTrack.js","components/Shared/Error.js","components/Track/UpdateTrack.js","components/Track/TrackList.js","components/Track/CreateTrack.js","components/Shared/Loading.js","pages/App.js","pages/Profile.js","components/Auth/Signout.js","components/Shared/Header.js","Root.js","components/Auth/Login.js","components/Auth/Register.js","components/Auth/index.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","light","indigo","main","dark","secondary","orange","typography","useNextVariants","withRoot","Component","props","CssBaseline","SEARCH_TRACKS_Query","gql","withStyles","root","padding","margin","spacing","display","alignItems","classes","setSearchResults","useState","search","setSearch","inputEl","useRef","clearSearchInput","current","focus","client","onSubmit","event","a","async","preventDefault","query","variables","res","data","tracks","console","log","handleSubmit","Paper","className","elevation","IconButton","onClick","TextField","fullWidth","placeholder","onChange","target","value","inputRef","type","AudioPlayer","url","height","width","controls","CREATE_LIKE_MUTATION","iconButton","color","icon","marginLeft","trackId","likeCount","currentUser","useContext","UserContext","mutation","onCompleted","refetchQueries","ME_QUERY","createLike","stopPropagation","disabled","likeSet","findIndex","track","id","GET_TRACKS_QUERY","DELETE_TRACK_MUTATION","DeleteTrack","postedBy","update","cache","deleteTrack","readQuery","index","Number","slice","writeQuery","snackbar","UPDATE_TRACK_MUTATION","container","flexWrap","dialog","maxWidth","textField","cancel","save","button","input","open","setOpen","title","setTitle","file","setFile","description","setDescription","submitting","setSubmitting","fileError","setFileError","isCurrentUser","handleAudioChange","selectedFile","files","size","handleAudioUpload","FormData","append","axios","post","Fragment","updateTrack","loading","error","Dialog","uploadedUrl","alert","DialogTitle","DialogContent","DialogContentText","FormControl","label","multiline","rows","required","accept","htmlFor","Button","variant","component","name","FormHelperText","DialogActions","trim","CircularProgress","details","link","textDecoration","List","map","ExpansionPanel","key","ExpansionPanelSummary","expandIcon","ListItem","likes","length","ListItemText","primaryTypographyProps","to","username","ExpansionPanelDetails","Typography","ExpansionPanelActions","CREATE_TRACK_MUTATION","fab","position","bottom","right","zIndex","createTrack","concat","textAlign","progress","searchResults","PROFILE_QUERY","paper","marginRight","marginTop","marginBottom","breakpoints","up","card","justifyContent","audioIcon","fontSize","thumbIcon","divider","params","Card","CardHeader","avatar","Avatar","user","subheader","dateJoined","tracksSet","Divider","cursor","buttonIcon","localStorage","removeItem","writeData","isLoggedIn","handleSignout","flexGrow","grow","logo","faceIcon","AppBar","Toolbar","href","noWrap","exact","React","createContext","fetchPolicy","me","routeLinks","Provider","path","App","Profile","basename","fallback","LOGIN_MUTATION","flexDirection","backgroundColor","form","submit","setNewUser","setUsername","password","setPassword","tokenAuth","called","setItem","token","InputLabel","Input","REGISTER_MUTATION","openTitle","verticalAlign","email","setEmail","createUser","disableBackdropClick","newUser","ApolloClient","uri","fetchOptions","credentials","request","operation","getItem","setContext","headers","Authorization","clientState","defaults","IS_LOGGED_IN_QUERY","ReactDOM","render","Auth","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce666194.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: indigo[500],\n      main: indigo[700],\n      dark: indigo[900]\n    },\n    secondary: {\n      light: orange[300],\n      main: orange[500],\n      dark: orange[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        {/* https://material-ui.com/getting-started/usage/#cssbaseline */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React,{ useState, useRef } from \"react\";\nimport {ApolloConsumer } from 'react-apollo';\nimport {gql} from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst SearchTracks = ({ classes, setSearchResults }) => {\n\tconst [ search, setSearch ] = useState(\"\");\n\tconst inputEl = useRef();\n\n\tconst clearSearchInput = () => {\n\t\tsetSearchResults([]);\n\t\tsetSearch([]);\n\t\tinputEl.current.focus();\n\t}\n\n\tconst handleSubmit = async (event, client) => {\n\t\tevent.preventDefault();\n\t\ttry{\n\t\t\tconst res = await client.query({\n\t\t\t\tquery:SEARCH_TRACKS_Query,\n\t\t\t\tvariables: { search }\n\t\t\t})\n\t\t\tsetSearchResults(res.data.tracks);\n\t\t\tconsole.log({res})\n\t\t} catch(err){\n\t\t\tconsole.log(\"[ERROR SEARCH\");\n\t}\n\t}\n\n\n  return (\n  \t<ApolloConsumer >\n  \t {(client ) => {\n\n  \t return (\n\t\t  \t<form onSubmit={(event) => handleSubmit(event,client)}>\n\t\t  \t\t<Paper className={classes.root} elevation={1}>\n\t\t  \t\t<IconButton onClick={ clearSearchInput }>\n\t\t  \t\t\t<ClearIcon />\n\t\t  \t\t</IconButton>\n\t\t  \t\t<TextField \n\t\t  \t\t\tfullWidth\n\t\t  \t\t\tplaceholder=\"Search All Tracks\"\n\t\t  \t\t\tonChange={event => setSearch(event.target.value)}\n\t\t  \t\t\tvalue = { search }\n\t\t  \t\t\tinputRef={ inputEl }\n\t\t  \t\t />\n\t\t  \t\t <IconButton type=\"submit\">\n\t\t  \t\t \t<SearchIcon />\n\t\t  \t\t </IconButton>\n\t\t  \t\t</Paper> \n\t\t  \t</form>\n\t\t );\n  \t}}\n  \t</ApolloConsumer>\n);\n};\n\nconst SEARCH_TRACKS_Query = gql`\n\tquery($search: String){\n\t\ttracks(search: $search){\n\t\t\tid\n\t\t\ttitle\n\t\t\tdescription\n\t\t\turl\n\t\t\tlikes {\n\t\t\t\tid\n\t\t\t}\n\t\t\tpostedBy {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\t}\n\t\t}\n\t}\n\n`\n\n\nconst styles = theme => ({\n  root: {\n    padding: \"2px 4px\",\n    margin: theme.spacing(1),\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nexport default withStyles(styles)(SearchTracks);\n","import React from \"react\";\nimport  ReactPlayer from 'react-player';\n\nconst AudioPlayer = ({ url }) => (\n\n\t<div>\n\t\t<ReactPlayer url={url} height=\"30px\" width=\"500px\" controls={true} />\n\t</div>\n\n);\n\nexport default AudioPlayer;\n","import React,{ useContext } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\n\nimport {  UserContext,ME_QUERY } from '../../Root';\n\nconst LikeTrack = ({ classes,trackId,likeCount }) => {\n\tconst  currentUser = useContext(UserContext); \n\n\tconst handleDisableLikedTrack = () => {\n\t  const userTracks = currentUser.likeSet;\n\t  const isTrackedLiked = userTracks.findIndex(({ track }) => track.id === trackId ) > -1;\n\t  return isTrackedLiked;\n\t}\n  return (\n  \t\t<Mutation mutation={ CREATE_LIKE_MUTATION}\n  \t\tvariables={{ trackId }}\n  \t\tonCompleted={(data) => {\n  \t\t\tconsole.log({ data });\n  \t\t} }\n  \t\trefetchQueries={ () => [{ query: ME_QUERY }]} \n  \t\t> \n  \t\t\t{ createLike => (\n  \t\t\t   <IconButton className={ classes.iconButton} onClick={(event) =>  {\n  \t\t\t   \t event.stopPropagation();\n  \t\t\t   \t createLike()\n  \t\t\t   } }\n  \t\t\t   \tdisabled={ handleDisableLikedTrack() }\n  \t\t\t   >\n  \t\t\t   \t  {likeCount }\n  \t\t\t   \t  <ThumbUpIcon className={ classes.icon } />\n  \t\t\t   </IconButton>\n  \t\t )}\n  \t\t</Mutation>\n\n );\n};\n\nconst CREATE_LIKE_MUTATION = gql`\n\tmutation($trackId:Int!){\n\t\tcreateLike(trackId:$trackId){\n\t\t\ttrack{\n\t\t\t\tid\n\t\t\t\tlikes {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n`\n\nconst styles = theme => ({\n  iconButton: {\n    color: \"deeppink\"\n  },\n  icon: {\n    marginLeft: theme.spacing(2) / 2\n  }\n});\n\nexport default withStyles(styles)(LikeTrack);\n","import React,{ useContext } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport {UserContext} from '../../Root';\nimport { GET_TRACKS_QUERY } from '../../pages/App';\n\nconsole.log(GET_TRACKS_QUERY);\n\n\nconst DeleteTrack = ({ track }) => {\n\tconst currentUser = useContext(UserContext);\n\tconst isCurrentUser = currentUser.id === track.postedBy.id;\n\n\tconst handleUpdateCache = (cache, {data: { deleteTrack } }) => {\n\t   const data =\tcache.readQuery({ query: GET_TRACKS_QUERY })\n\t  const index =  data.tracks.findIndex(\n\t   \t\ttrack => Number(track.id) === deleteTrack.trackId\n\t   \t)\n\t  //data.tracks.splice(index, 1)\n\t  const tracks = [...data.tracks.slice(0, index), ...data.tracks.slice(index + 1)]\n\t  cache.writeQuery({ query: GET_TRACKS_QUERY, data: { tracks }  })\n\n\t}\n  return isCurrentUser && (\n  \t <Mutation mutation={ DELETE_TRACK_MUTATION }\n  \t   variables={{ trackId:track.id }}\n  \t   onCompleted = {data => {\n  \t   \t\tconsole.log(data)\n  \t   }}\n  \t   update={ handleUpdateCache }\n      //refetchQueries={ () => [{ query: GET_TRACKS_QUERY }]}\n      >\n  \t   { deleteTrack => (\n  \t\t<IconButton onClick={deleteTrack}>\n  \t\t\t<TrashIcon />\n  \t\t</IconButton>\n  \t)}\n  \t </Mutation>\n\t);\n};\n\nconst DELETE_TRACK_MUTATION = gql`\n\tmutation($trackId: Int!){\n\t\tdeleteTrack(trackId: $trackId){\n\t\t\ttrackId\n\t\t}\n\t}\n`\n\nexport default DeleteTrack;\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// import Button from \"@material-ui/core/Button\";\n// import Snackbar from \"@material-ui/core/Snackbar\";\n\nconst Error = ({ classes }) => {\n  return <div>Error</div>;\n};\n\nconst styles = theme => ({\n  snackbar: {\n    margin: theme.spacing(2)\n  }\n});\n\nexport default withStyles(styles)(Error);\n","import React,{ useState, useContext } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport axios from 'axios';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nimport { GET_TRACKS_QUERY } from '../../pages/App';\nimport {UserContext} from '../../Root';\nimport Error   from '../Shared/Error';\n\n\nconst UpdateTrack = ({ classes , track }) => {\n\n    const currentUser = useContext(UserContext);\n\n     const [open, setOpen] = useState(false);\n     const [title, setTitle] = useState(track.title);\n     const [file, setFile] = useState(\"\");\n     const [description, setDescription] = useState(track.description);\n     const [submitting, setSubmitting] = useState(false);\n     const [fileError, setFileError]   = useState(\"\");\n\n     const isCurrentUser = currentUser.id === track.postedBy.id;\n\n     const handleAudioChange = event => {\n      const selectedFile =  event.target.files[0];\n      var fileSizeLimit  = 10000000;\n      if (selectedFile && selectedFile.size > fileSizeLimit){\n        setFileError(`$(selectedFile.name): File size too large`);\n      }else{ \n        setFile(selectedFile);\n        setFileError(\"\")\n     }\n}\n\n\n     const handleAudioUpload = async () => {\n         var data = new FormData()\n         data.append('file', file)\n         data.append('resource_type', 'raw')\n         data.append('upload_preset', 'react-tracks')\n         data.append('cloud_name', 'emmabreezy25')\n         const res = await axios.post('https://api.cloudinary.com/v1_1/emmabreezy25/raw/upload', data)\n         return res.data.url;\n     }\n\n     const handleSubmit = async (event, updateTrack) => {\n      event.preventDefault();\n      setSubmitting(true)\n      try{\n        const uploadedUrl = await handleAudioUpload()\n        console.log(uploadedUrl);\n        updateTrack( { variables: { trackId:track.id, title, description, url: uploadedUrl } })\n      } catch(err) {\n          console.error('Error uploading file', err);\n          setSubmitting(false);\n          setOpen(false);\n          alert(\"Error occured\")\n        }\n     }\n\n  return isCurrentUser &&  (\n    <React.Fragment>\n      <IconButton onClick={() => setOpen(true)}>\n         <EditIcon />\n      </IconButton>\n    {/*  */}\n    <Mutation mutation={ UPDATE_TRACK_MUTATION }\n      onCompleted={data => {\n        setSubmitting(false);\n        setOpen(false);\n        // setTitle(\"\");\n        // setDescription(\"\");\n        // setFile(\"\");\n      }}\n      refetchQueries={ () => [{ query: GET_TRACKS_QUERY }]}\n    >\n       {(updateTrack, {loading,error}) => {\n          if(error) return  <Error error={error} />\n\n        return (\n            <Dialog open={open} className={classes.dialog}>\n              <form onSubmit={ event => handleSubmit(event, updateTrack) }>\n                <DialogTitle> Update Track </DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                      Add a Title, Description & Audio File\n                      (Under 10MB)\n                  </DialogContentText>\n                  <FormControl fullWidth>\n                    <TextField \n                        label=\"Title\"\n                        placeholder=\"Add Title\"\n                        className={classes.textField}\n                        onChange={(event) => setTitle(event.target.value)}\n                        value={title}\n                    />\n                  </FormControl>\n                   <FormControl fullWidth>\n                    <TextField \n                        multiline\n                        rows=\"4\"\n                        label=\"Description\"\n                        placeholder=\"Add Description\"\n                        className={classes.textField}\n                        onChange={(event) => setDescription(event.target.value)}\n                        value={description}\n                    />\n                  </FormControl>\n                   <FormControl fullWidth error={Boolean(fileError)}>\n                      <input id=\"audio\" required type=\"file\" accept=\"audio/*\" className={classes.input} onChange={handleAudioChange}  /> \n                      <label htmlFor=\"audio\">\n                        <Button variant=\"outlined\" color={file ? 'secondary' : 'inherit'} component=\"span\" className={classes.button}> \n                          Audio File \n                          <LibraryMusicIcon className={classes.icon} />\n                      </Button>\n                      {file && file.name}\n                       <FormHelperText>\n                          { fileError }\n                       </FormHelperText>\n                      </label>\n                  </FormControl>\n                </DialogContent>\n                <DialogActions> \n                  <Button className={classes.cancel} onClick={() => setOpen(false)} disabled={submitting}> \n                    Cancel\n                  </Button>\n                  <Button className={classes.save} type=\"submit\" disabled={submitting || !title.trim() || !description.trim() || !file }> \n                    { submitting ? (\n                        <CircularProgress className={classes.save} size={24} />\n                      ) : \"Update Track\" } \n                  </Button>\n\n                </DialogActions>\n              </form>\n            </Dialog>\n        );\n       }}\n      </Mutation>\n    </React.Fragment>\n  );\n}\n\nconst UPDATE_TRACK_MUTATION = gql`\n  mutation($trackId: Int!, $title: String, $description: String, $url: String){\n    updateTrack(trackId:$trackId, title:$title, description:$description, url:$url){\n      track {\n          id\n          title\n          description\n          url\n          likes{\n            id\n          }\n          postedBy{\n            id \n            username\n            }\n  }\n    }\n  }\n\n`\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  dialog: {\n    margin: \"0 auto\",\n    maxWidth: 550\n  },\n  textField: {\n    margin: theme.spacing(1)\n  },\n  cancel: {\n    color: \"red\"\n  },\n  save: {\n    color: \"green\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  icon: {\n    marginLeft: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nexport default withStyles(styles)(UpdateTrack);\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport AudioPlayer from '../Shared/AudioPlayer';\nimport LikeTrack from './LikeTrack';\nimport DeleteTrack from './DeleteTrack';\nimport UpdateTrack from './UpdateTrack';\n\nconst TrackList = ({ classes,tracks }) => (\n    <List>\n      {tracks.map(track => (\n        <ExpansionPanel key={track.id}>\n          <ExpansionPanelSummary expandIcon={ <ExpandMoreIcon /> }>\n            <ListItem className={classes.root}>\n              <LikeTrack trackId={track.id} likeCount={track.likes.length} />\n               <ListItemText\n                 primaryTypographyProps={{ \n                   color:\"primary\"\n                 }}\n                 primary={track.title} \n                 secondary={\n                <Link className={classes.link} to={`/profile/${track.postedBy.id}`}>\n                   {track.postedBy.username}\n                </Link>\n               } \n               />\n              <AudioPlayer url={track.url} />\n            </ListItem>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.details}>\n            <Typography variant=\"body1\">{ track.description } </Typography>\n          </ExpansionPanelDetails>\n          <ExpansionPanelActions> \n            <UpdateTrack track={ track } />\n            <DeleteTrack  track={ track } />\n          </ExpansionPanelActions>\n        </ExpansionPanel>\n\n      ))}\n    </List>\n);\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  details: {\n    alignItems: \"center\"\n  },\n  link: {\n    color: \"#424242\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      color: \"black\"\n    }\n  }\n};\n\nexport default withStyles(styles)(TrackList);\n","import React,{ useState } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport axios from 'axios';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nimport { GET_TRACKS_QUERY } from '../../pages/App';\nimport Error   from '../Shared/Error';\n\n\nconst CreateTrack = ({ classes }) => {\n     const [open, setOpen] = useState(false);\n     const [title, setTitle] = useState(\"\");\n     const [description, setDescription] = useState(\"\");\n     const [file, setFile] = useState(\"\");\n     const [submitting, setSubmitting] = useState(false);\n     const [fileError, setFileError]   = useState(\"\");\n\n\n     const handleAudioChange = event => {\n      const selectedFile =  event.target.files[0];\n      var fileSizeLimit  = 10000000;\n      if (selectedFile && selectedFile.size > fileSizeLimit){\n        setFileError(`$(selectedFile.name): File size too large`);\n      }else{ \n        setFile(selectedFile);\n        setFileError(\"\")\n     }\n}\n\n     const handleAudioUpload = async () => {\n         var data = new FormData()\n         data.append('file', file)\n         data.append('resource_type', 'raw')\n         data.append('upload_preset', 'react-tracks')\n         data.append('cloud_name', 'emmabreezy25')\n         const res = await axios.post('https://api.cloudinary.com/v1_1/emmabreezy25/raw/upload', data)\n         return res.data.url;\n     }\n\n     const handleSubmit = async (event, createTrack) => {\n      event.preventDefault();\n      setSubmitting(true)\n      try{\n        const uploadedUrl = await handleAudioUpload()\n        console.log(uploadedUrl);\n        createTrack( { variables: { title, description, url: uploadedUrl } })\n      } catch(err) {\n          console.error('Error uploading file', err);\n          setTitle(\"\");\n          setDescription(\"\");\n          setFile(\"\");\n          setSubmitting(false);\n          setOpen(false);\n          alert(\"Error occured\")\n        }\n     }\n\n    const handleUpdateCache = (cache, {data: { createTrack }}) => {\n       const data =  cache.readQuery({ query : GET_TRACKS_QUERY });\n       const tracks = data.tracks.concat(createTrack.track);\n       cache.writeQuery({ query: GET_TRACKS_QUERY, data:{  tracks } });\n\n    }\n\n  return (\n    <React.Fragment>\n      <Button  className={classes.fab} color=\"secondary\" onClick={() => setOpen(true)}>\n        {open ? <ClearIcon /> : <AddIcon />}\n      </Button>\n    {/*  */}\n    <Mutation mutation={ CREATE_TRACK_MUTATION }\n      onCompleted={data => {\n        setSubmitting(false);\n        setOpen(false);\n        setTitle(\"\");\n        setDescription(\"\");\n        setFile(\"\");\n      }}\n      //refetchQueries={ () => [{ query: GET_TRACKS_QUERY }]}\n      update={handleUpdateCache}\n    >\n       {(createTrack, {loading,error}) => {\n          if(error) return  <Error error={error} />\n\n        return (\n            <Dialog open={open} className={classes.dialog}>\n              <form onSubmit={ event => handleSubmit(event, createTrack) }>\n                <DialogTitle> Create Track </DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                      Add a Title, Description & Audio File\n                      (Under 10MB)\n                  </DialogContentText>\n                  <FormControl fullWidth>\n                    <TextField \n                        label=\"Title\"\n                        placeholder=\"Add Title\"\n                        className={classes.textField}\n                        onChange={(event) => setTitle(event.target.value)}\n                        value={title}\n                    />\n                  </FormControl>\n                   <FormControl fullWidth>\n                    <TextField \n                        multiline\n                        rows=\"4\"\n                        label=\"Description\"\n                        placeholder=\"Add Description\"\n                        className={classes.textField}\n                        onChange={(event) => setDescription(event.target.value)}\n                        value={description}\n                    />\n                  </FormControl>\n                   <FormControl fullWidth error={Boolean(fileError)}>\n                      <input id=\"audio\" required type=\"file\" accept=\"audio/*\" className={classes.input} onChange={handleAudioChange}  /> \n                      <label htmlFor=\"audio\">\n                        <Button variant=\"outlined\" color={file ? 'secondary' : 'inherit'} component=\"span\" className={classes.button}> \n                          Audio File \n                          <LibraryMusicIcon className={classes.icon} />\n                      </Button>\n                      {file && file.name}\n                       <FormHelperText>\n                          { fileError }\n                       </FormHelperText>\n                      </label>\n                  </FormControl>\n                </DialogContent>\n                <DialogActions> \n                  <Button className={classes.cancel} onClick={() => setOpen(false)} disabled={submitting}> \n                    Cancel\n                  </Button>\n                  <Button className={classes.save} type=\"submit\" disabled={submitting || !title.trim() || !description.trim() || !file }> \n                    { submitting ? (\n                        <CircularProgress className={classes.save} size={24} />\n                      ) : \"Add Track\" } \n                  </Button>\n\n                </DialogActions>\n              </form>\n            </Dialog>\n        );\n       }}\n      </Mutation>\n    </React.Fragment>\n  );\n}\n\nconst CREATE_TRACK_MUTATION = gql`\n  mutation($title:String!,$description:String!, $url:String!){\n     createTrack(title:$title, description:$description, url:$url)\n     {\n       track {\n        id\n        title\n        description\n        url \n        likes {\n          id\n        }\n        postedBy {\n          id\n          username\n        }\n       }\n     }\n  }\n`\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  dialog: {\n    margin: \"0 auto\",\n    maxWidth: 550\n  },\n  textField: {\n    margin: theme.spacing(2)\n  },\n  cancel: {\n    color: \"red\"\n  },\n  save: {\n    color: \"green\"\n  },\n  button: {\n    margin: theme.spacing(2)\n  },\n  icon: {\n    marginLeft: theme.spacing(2)\n  },\n  input: {\n    display: \"none\"\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: \"200\"\n  }\n});\n\nexport default withStyles(styles)(CreateTrack);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loading = ({ classes }) => (\n\t<div className={classes.root}>\n\t\t<CircularProgress className={classes.progress} />\n\t</div>\n);\n\nconst styles = theme => ({\n  root: {\n    width: \"100vw\",\n    textAlign: \"center\"\n  },\n  progress: {\n    margin: theme.spacing(2),\n    color: theme.palette.secondary.dark\n  }\n});\n\nexport default withStyles(styles)(Loading);\n","import React,{useState} from \"react\";\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport SearchTracks from '../components/Track/SearchTracks';\nimport TrackList from '../components/Track/TrackList';\nimport CreateTrack from '../components/Track/CreateTrack';\nimport Loading  from '../components/Shared/Loading';\nimport Error   from '../components/Shared/Error';\n\nconst App = ({ classes }) => {\n  const [searchResults,setSearchResults] = useState([]);\n\n  return (\n  \t <div className={ classes.container }>\n  \t \t<SearchTracks setSearchResults={setSearchResults} />\n  \t \t<CreateTrack  />\n  \t \t<Query query={ GET_TRACKS_QUERY }>\n  \t \t\t{({ data, loading, error }) => {\n  \t \t\t\tif (loading) return <Loading />\n  \t \t\t\tif (error) return <Error />\n          const tracks = searchResults.length > 0 ? searchResults : data.tracks; \n  \t \t\t\treturn <TrackList  tracks={tracks} />\n  \t \t\t}}\n  \t \t</Query>\n  \t </div>\n );\n};\n\nexport const GET_TRACKS_QUERY = gql`\n\nquery getTracksQuery{\n\ttracks {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\turl\n\t\tlikes{\n\t\t\tid\n\t\t}\n\t\tpostedBy{\n\t\t\tid \n\t\t\tusername\n\t\t}\n\t}\n}\n\n\n`\n\nconst styles = theme => ({\n  container: {\n    margin: \"0 auto\",\n    maxWidth: 960,\n    padding: theme.spacing(2)\n  }\n});\n\nexport default withStyles(styles)(App);\n","import React from \"react\";\nimport { Query } from 'react-apollo';\nimport {gql} from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUpTwoTone\";\nimport AudiotrackIcon from \"@material-ui/icons/AudiotrackTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport format from 'date-fns/format';\n\nimport AudioPlayer from '../components/Shared/AudioPlayer';\nimport Error from '../components/Shared/Error';\nimport Loading from '../components/Shared/Loading';\n\nconst Profile = ({ classes, match }) => {\n  const id = match.params.id;\n\n  return(\n      <Query query={ PROFILE_QUERY } variables={{ id }}>\n        {( { data, loading, error } )  => {\n          if(loading) return <Loading />\n          if(error) return <Error error={error} />\n\n          return (\n              <div>\n                <Card className={classes.card}>\n                  <CardHeader \n                    avatar={<Avatar> { data.user.username[0] }</Avatar> }\n                    title={ data.user.username }\n                    subheader={`Joined ${ data.user.dateJoined }`}>\n                    </CardHeader>\n                   </Card>\n\n                    <Paper elevation={1} className={ classes.paper}>\n                      <Typography className={ classes.title }>\n                        <AudiotrackIcon className={classes.audioIcon} />\n                        created Tracks\n                      </Typography>\n                      {data.user.tracksSet.map((track) => {\n                        return ( <div key={track.id}>\n                          <Typography>\n                            { track.title } - { track.likes.length } Likes\n                          </Typography>\n                          <AudioPlayer url={track.url} />\n                          <Divider className={classes.divider} />\n                        </div>\n                        );\n                      })}\n                    </Paper>\n                    {/*  LIKED TRACKS */}\n                    <Paper elevation={1} className={ classes.paper }>\n                      <Typography className={ classes.title }>\n                        <ThumbUpIcon className={classes.thumbIcon} />\n                          Liked Tracks\n                      </Typography>\n                      {data.user.likeSet.map(({ track }) => (\n                          <div key={ track.id }>\n                            <Typography>\n                              {track.title} . {track.likes.length} Likes . { track.postedBy.username}\n                            </Typography>\n                            <AudioPlayer url={track.url} />\n                            <Divider className={classes.divider} />\n                          </div>\n                      ))}\n                    </Paper>\n              </div>\n          )\n        }}\n      </Query>\n\n  );\n};\n\nconst PROFILE_QUERY = gql`\n  query ($id: Int!){\n   user(id: $id){\n    id\n    username\n    dateJoined\n    likeSet{\n      id\n      track{\n        id\n        title\n        url\n        likes{\n          id\n        }\n        postedBy{\n          id\n          username\n        }\n        \n      }\n    }\n    tracksSet{\n      id\n      title\n      url\n      likes{\n        id\n      }\n    }\n  }\n}\n`\n\nconst styles = theme => ({\n  paper: {\n    width: \"auto\",\n    display: \"block\",\n    padding: theme.spacing(2),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      width: 650,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2)\n  },\n  audioIcon: {\n    color: \"purple\",\n    fontSize: 30,\n    marginRight: theme.spacing(1)\n  },\n  thumbIcon: {\n    color: \"green\",\n    marginRight: theme.spacing(1)\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n});\n\nexport default withStyles(styles)(Profile);\n","import React from \"react\";\nimport { ApolloConsumer } from 'react-apollo';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Signout = ({ classes }) => {\n\n const handleSignout = client => {\n \tlocalStorage.removeItem(\"authToken\");\n \tclient.writeData({ data: { isLoggedIn: false } })\n \tconsole.log(\"Signout out user\", client)\n }\n  return (\n  \t<ApolloConsumer>\n  \t{client => (\n\t\t<Button onClick={() => handleSignout(client)}>\n  \t\t\t<Typography color='secondary'>\n  \t\t\t\tSignout\n  \t\t\t</Typography>\n  \t\t\t<ExitToApp className={classes.buttonIcon}  color=\"secondary\" />\n  \t\t</Button>\n  \t)}\n  \t</ApolloConsumer>\n  \n );\n};\n\nconst styles = {\n  root: {\n    cursor: \"pointer\",\n    display: \"flex\"\n  },\n  buttonIcon: {\n    marginLeft: \"5px\"\n  }\n};\n\nexport default withStyles(styles)(Signout);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport RadioIcon from \"@material-ui/icons/RadioTwoTone\";\nimport FaceIcon from \"@material-ui/icons/FaceTwoTone\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {Link} from 'react-router-dom';\nimport Signout from '../Auth/Signout';\n\nconst Header = ({ classes,currentUser }) => {\n  return(\n\n      <AppBar position=\"static\" className={ classes.root }>\n        <Toolbar>\n         <a  href=\"/\" className={classes.grow}>\n            <Typography  color=\"secondary\" noWrap>\n              Home\n            </Typography>\n          </a>\n          <Link exact=\"true\" to=\"/\" className={classes.grow}>\n            <RadioIcon className={ classes.logo } color=\"secondary\" />\n            <Typography  color=\"secondary\" noWrap>\n              Musix\n            </Typography>\n          </Link>\n\n          {currentUser && (\n              <Link  to={`/profile/${currentUser.id}`} className={ classes.grow}>\n                <FaceIcon className={classes.faceIcon} />\n                <Typography className={ classes.username} noWrap>\n                  { currentUser.username }\n                </Typography>\n              </Link>\n            )}\n        <Signout />\n        </Toolbar>\n      </AppBar>\n\n\n\n  );\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 0,\n    padding: 0\n  },\n  grow: {\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\"\n  },\n  logo: {\n    marginRight: theme.spacing(1),\n    fontSize: 45\n  },\n  faceIcon: {\n    marginRight: theme.spacing(1),\n    fontSize: 30,\n    color: \"white\"\n  },\n  username: {\n    color: \"white\",\n    fontSize: 30\n  }\n});\n\nexport default withStyles(styles)(Header);\n","import React,{ Suspense } from \"react\";\nimport { Query } from 'react-apollo';\nimport  { gql } from 'apollo-boost';\nimport { BrowserRouter as Router, Switch,Route } from 'react-router-dom';\nimport withRoot from \"./withRoot\";\nimport App from './pages/App';\nimport Profile from './pages/Profile';\nimport Header from './components/Shared/Header';\nimport Loading from './components/Shared/Loading';\nimport Error from './components/Shared/Error';\n\nexport const UserContext = React.createContext()\n\nconst Root = () => (\n\t<Query query={ME_QUERY}  fetchPolicy='cache-and-network'>\n\t\t{({ data, loading, error }) => {\n\t\t\tif(loading) return (<Loading />)\n\t\t\tif (error)  return (<Error />)\n\t\t\t const currentUser = data.me;\n\t\t\tconst routeLinks = (\n\t\t\t\t\t<UserContext.Provider value={currentUser}>\n\t\t\t\t\t\t   <Header currentUser={currentUser} />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/\" exact component={App} />\n\t\t\t\t\t\t\t\t<Route path=\"/profile/:id\" exact component={Profile} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</UserContext.Provider>\n\t\t\t\t);\n\t\t\treturn (\n\t\t\t\t<Router basename=\"/app\">\n\t\t\t\t\t<Suspense fallback={<div>Loading</div>}>{routeLinks}</Suspense>\n\t\t\t\t</Router>\n\t\t\t);\n\t\t}}\n\t</Query>\n);\n\n// const GET_TRACKS_QUERY = gql`\n// \t{\n// \t\ttracks{\n// \t\t\tid\n// \t\t\ttitle\n// \t\t\tdescription\n// \t\t\turl\n// \t\t}\n\n// \t}\n\n// `\n\nexport const ME_QUERY = gql`\n\n {\n \tme{\n \t\tid\n \t\tusername\n \t\tlikeSet{\n \t\t\ttrack{\n \t\t\t\tid\n \t\t\t}\n \t\t}\n \t}\n }\n\n\n\n`\n\nexport default withRoot(Root);\n","import React,{useState} from \"react\";\nimport { Mutation } from 'react-apollo';\nimport  { gql} from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Lock from \"@material-ui/icons/Lock\";\n\nconst Login = ({ classes, setNewUser }) => {\n     const [username, setUsername] = useState(\"\")\n     const [password, setPassword] = useState(\"\")\n\n     const handleSubmit = async (event,tokenAuth,client) =>{\n      event.preventDefault();\n       try{\n           const  res = await tokenAuth();\n           localStorage.setItem('authToken', res.data.tokenAuth.token);\n           client.writeData({ data: { isLoggedIn: true } })\n      }catch{\n            console.log('[ERROR LOGIN]');\n            alert('[USER DETAIL IS INVALID]');\n        }\n     }\n\n  return (\n       <div className={classes.root}>\n        <Paper className={classes.paper}> \n          <Avatar className={classes.avatar}>\n            <Lock />\n          </Avatar>\n          <Typography>\n              Login as Existing User\n          </Typography>\n         \n           <Mutation mutation={ LOGIN_MUTATION }\n                variables={{ username,password }}\n             >\n              { (tokenAuth, { loading, error,called, client }) => {\n                return (\n                  <form onSubmit={(event) => handleSubmit(event,tokenAuth,client)} className={ classes.form }>\n                    <FormControl margin=\"normal\" required fullWidth>\n                      <InputLabel htmlFor=\"username\">Username</InputLabel>\n                      <Input id=\"username\" type=\"text\" onChange={event=> setUsername(event.target.value)}/>\n                    </FormControl>\n\n                    <FormControl margin=\"normal\" required fullWidth>\n                      <InputLabel htmlFor=\"password\">Password</InputLabel>\n                      <Input id=\"password\" type=\"password\"  onChange={event=> setPassword(event.target.value)}/>\n                    </FormControl>\n                    <br />\n                    <Button type=\"submit\"   variant=\"contained\" color=\"primary\" className={classes.submit} \n                            fullWidth disabled={loading || !username.trim() ||  !password.trim() }>\n                      {loading ? \"Logging...\" : \"Login\"}\n                    </Button>\n                    <Button  onClick={() => setNewUser(true)} color=\"secondary\" variant=\"outlined\" fullWidth>\n                      New user? Register here\n                    </Button>\n                  {/* Error handling*/}\n                  {error && <div>Error</div> }\n                  </form>\n\n                  );\n                }}\n                </Mutation>\n                \n        </Paper>\n      </div>\n    );\n};\n\nconst LOGIN_MUTATION = gql`\n  mutation($username:String!,$password:String!)\n  {\n    tokenAuth(username:$username,password:$password)\n    {\n      token\n    }\n  }\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(2)\n  },\n  title: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n});\n\nexport default withStyles(styles)(Login);\n","import React,{useState} from \"react\";\nimport { Mutation } from 'react-apollo';\nimport  { gql} from 'apollo-boost';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\n\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Register = ({ classes,setNewUser }) => {\n\n     const [username, setUsername] = useState(\"\")\n     const [email, setEmail] = useState(\"\")\n     const [password, setPassword] = useState(\"\")\n     const [open, setOpen] = useState(false)\n\n     const handleSubmit = (event,createUser) =>{\n      event.preventDefault();\n      createUser();\n     }\n\n  return (\n\n      <div className={classes.root}>\n        <Paper className={classes.paper}> \n          <Avatar className={classes.avatar}>\n            <Gavel />\n          </Avatar>\n          <Typography>\n            Register\n          </Typography>\n         \n           <Mutation mutation={ REGISTER_MUTATION }\n                variables={{ username, email , password }}\n                onCompleted={data => {\n                  console.log({data})\n                  setOpen(true)\n                }}\n             >\n              { (createUser, { loading, error }) => {\n                return (\n                  <form onSubmit={(event) => handleSubmit(event,createUser)} className={ classes.form }>\n                    <FormControl margin=\"normal\" required fullWidth>\n                      <InputLabel htmlFor=\"username\">Username</InputLabel>\n                      <Input id=\"username\" type=\"text\" onChange={event=> setUsername(event.target.value)}/>\n                    </FormControl>\n\n                    <FormControl margin=\"normal\" required fullWidth>\n                      <InputLabel htmlFor=\"email\">Email</InputLabel>\n                      <Input id=\"email\"  type=\"email\"  onChange={event=> setEmail(event.target.value)}/>\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                      <InputLabel htmlFor=\"password\">Password</InputLabel>\n                      <Input id=\"password\" type=\"password\"  onChange={event=> setPassword(event.target.value)}/>\n                    </FormControl>\n                    <br />\n                    <Button type=\"submit\"   variant=\"contained\" color=\"secondary\" className={classes.submit} \n                            fullWidth disabled={loading || !username.trim() || !email.trim() || !password.trim() }>\n                      {loading ? \"Registering...\" : \"Register\"}\n                    </Button>\n                    <Button  onClick={() => setNewUser(false)} color=\"primary\" variant=\"outlined\" fullWidth>\n                      Previous user? Log in here\n                    </Button>\n                  {/* Error handling*/}\n                  {error && <div>Error</div> }\n                  </form>\n\n                  );\n                }}\n                </Mutation>\n                \n        </Paper>\n        <Dialog\n          open={open} \n          disableBackdropClick={true}\n          >\n          <DialogTitle> \n            <VerifiedUserTwoTone  className={classes.icon} />\n            New Account\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>  User  successfully created! </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" variant=\"contained\" onClick={ () => setNewUser(false) }> Login </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n\n  )\n};\n\nconst REGISTER_MUTATION = gql`\n  mutation($username:String!,$email:String!,$password:String!)\n  {\n    createUser(username:$username, email:$email, password:$password)\n    {\n      user{\n        username\n        email\n      }\n    }\n  }\n\n\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(2)\n  },\n  title: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.openTitle\n  },\n  avatar: {\n    margin: theme.spacing(2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(2)\n  },\n  submit: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  icon: {\n    padding: \"0px 2px 2px 0px\",\n    verticalAlign: \"middle\",\n    color: \"green\"\n  }\n});\n\nexport default withStyles(styles)(Register);\n","import React,{ useState } from \"react\";\n\nimport withRoot from \"../../withRoot\";\nimport Login from './Login';\nimport Register from './Register';\n\nexport default withRoot(() => {\n   const [newUser, setNewUser] = useState(true);\t\n  return newUser ?\n  \t\t( <Register setNewUser={setNewUser}/> \n  \t\t):(\n  \t\t  <Login setNewUser={setNewUser} />\n  \t\t)\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ApolloProvider,Query } from 'react-apollo';\nimport  ApolloClient,{ gql }  from 'apollo-boost';\n\nimport Root from \"./Root\";\nimport Auth from './components/Auth'\n\nconst client = new ApolloClient({\n\turi: 'http://localhost:8000/graphql/',\n\tfetchOptions:{\n\t\tcredentials:\"include\"\n\t},\n\trequest: operation => {\n\t\tconst token = localStorage.getItem('authToken') || \"\";\n\t\toperation.setContext({\n\t\t\theaders:{\n\t\t\t\tAuthorization: `JWT ${ token }`\n\t\t\t}\n\t\t})\n\t},\n\tclientState:{\n\t\tdefaults:{\n\t\t\tisLoggedIn: !!localStorage.getItem('authToken')\n\t\t}\n\t}\n});\n\nconst IS_LOGGED_IN_QUERY = gql` \n\tquery{\n\t\tisLoggedIn @client\n\t}\n\n\n`\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n\t<Query query={IS_LOGGED_IN_QUERY}>\n\t  {({ data }) => data.isLoggedIn ? <Root /> : <Auth />}\n\t</Query>\n\t</ApolloProvider>\n,document.getElementById(\"myapp\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}